/*
 * standaardprogramma voor de bediening van de infrarood sensor
 * 
 * 'Dir' staat voor richting, er zijn 5 richtingen mogelijk.
 * 's' staat voor de signaalsterkte, deze is (meestal) recht evenredig met de afstand
 */


//een effectievere maar praktisch overbodige mannier om text en getallen achter elkaar te zetten
#define TextNumOut(xPos,yPos,str,col,num)  TextOut(xPos,yPos,str);NumOut(xPos+6*col,yPos,num)

void HTEnhancedIRSeekerV2(const byte  port, int &dir, int &strength)
{
  int cResp;
  byte cmdBuf[] = {0x10, 0x43};  // Read DC signal strengths
  byte respBuf[];                 // Response Buffer
  bool fSuccess;
  int i, iMax;
  long dcSigSum, dcStr;

  dir = 0;
  strength = 0;

  // Read DC mode
  cResp=6;
  fSuccess = I2CBytes(port, cmdBuf, cResp, respBuf);
  if (fSuccess) {
    // Find the max DC sig strength
    iMax = 0;
    for (i=1; i<5; i++) if (respBuf[i] > respBuf[iMax]) iMax = i;
    // Calc base DC direction value
    dir = iMax*2+1;
    // Set base dcStrength based on max signal and average
    dcSigSum = respBuf[iMax] + respBuf[5];
    // Check signal strength of neighboring sensor elements
    if ((iMax > 0) && (respBuf[iMax-1] > respBuf[iMax]/2)) {
        dir--;
        dcSigSum += respBuf[iMax-1];
    }
    if ((iMax < 4) && (respBuf[iMax+1] > respBuf[iMax]/2)) {
        dir++;
        dcSigSum += respBuf[iMax+1];
    }
    // Make DC strength compatible with AC strength.
	// use: sqrt(dcSigSum*500)
    dcSigSum *= 500; dcStr = 1;
    repeat(10) dcStr = (dcSigSum/dcStr + dcStr) / 2;  // sqrt
    strength = dcStr;
    // Decide if using DC strength
    if (strength <= 200) {
      // Use AC Dir
      dir = 0; strength = 0;
      cmdBuf[1] = 0x49; // Recycle rest of cmdBuf
      cResp=6;
      fSuccess = I2CBytes(port, cmdBuf, cResp, respBuf);
      if (fSuccess) {
        dir = respBuf[0];
        // Sum the sensor elements to get strength
        if (dir > 0) for (i=1; i<=5; i++) strength += respBuf[i];
      }
    }
  }
}


task main()
{
  int dir, s5;              			 n                      			//maak variabelen voor het opslaan van de gemeten waarden
  SetSensorLowspeed(IN_1);				                        			//start de infraroodsensor, aangesloten op poort 1
  while(true)								                                  	//start oneindige loop
  {
    HTEnhancedIRSeekerV2(IN_1, dir, s1);		                  	//meet waarden van poort 1 en sla ze op
    TextNumOut(0, LCD_LINE3, "Dir:    ",4,dir);
    TextNumOut(6, LCD_LINE4, "St:     ",3,s1);
    Wait(100);			                                 						//wacht 10ms
  }
}
